In order to use public transport
As a customer
I want money on my card

o = Oystercard.new(0)
o.increase(10)

o = Oystercard.balance


In order to keep using public transport
As a customer
I want to add money to my card
o = Oystercard.new
o.top_up(10) => @balance += balance


In order to protect my money from theft or loss
As a customer
I want a maximum limit (of Â£90) on my card
update the top_up method
o = Oystercard.new
o.top_up(91) => raise_error: "Max balance exceeded"

In order to pay for my journey
As a customer
I need my fare deducted from my card
o = Oystercard.new
o.deduct(10) => @balance -= amount


In order to get through the barriers.
As a customer
I need to touch in and out.
o = Oystercard.new
o.in_journey? = false
if touch_in == true
then @in_journey = true
if touch_out == true
then @in_journey = false
end
end

****
require './lib/oystercard'
o = Oystercard.new
o.in_journey? == false
o.touch_in == true
o.in_journey? == true
o.touch_out == true
o.in_journey? == false
