In order to use public transport
As a customer
I want money on my card

o = Oystercard.new(0)
o.increase(10)

o = Oystercard.balance


In order to keep using public transport
As a customer
I want to add money to my card
o = Oystercard.new
o.top_up(10) => @balance += balance


In order to protect my money from theft or loss
As a customer
I want a maximum limit (of £90) on my card
update the top_up method
o = Oystercard.new
o.top_up(91) => raise_error: "Max balance exceeded"

In order to pay for my journey
As a customer
I need my fare deducted from my card
o = Oystercard.new
o.deduct(10) => @balance -= amount


In order to get through the barriers.
As a customer
I need to touch in and out.
require './lib/oystercard'
o = Oystercard.new
o.in_journey? == false
o.touch_in == true
o.in_journey? == true
o.touch_out == true
o.in_journey? == false

In order to pay for my journey
As a customer
I need to have the minimum amount (£1) for a single journey.

require './lib/oystercard'
o = Oystercard.new
o.touch_in = raise_error "Not enough money on your card"


In order to pay for my journey
As a customer
When my journey is complete, I need the correct amount deducted from my card

# let's assume the journey costs £1
require './lib/oystercard'
o = Oystercard.new
o.top_up(20)
o.touch_in

o.balance
=> 20

o.touch_out

o.balance
=> 19

STEP 11
In order to pay for my journey
As a customer
I need to know where I've travelled from

require './lib/oystercard'
o = Oystercard.new
o.top_up(10)
o.touch_in
o.departure

STEP 12
In order to know where I have been
As a customer
I want to see all my previous trips
require './lib/oystercard'
o = Oystercard.new
o.top_up(10)
o.touch_in("Holborn")
o.trips
